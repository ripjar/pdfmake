var fonts = {
	NotoSansArabic: {
		normal: "examples/fonts/NotoSansEnglishArabic-reg.ttf",
		bold: "examples/fonts/NotoSansEnglishArabic-Bold.ttf",
		italics: "examples/fonts/NotoSansEnglishArabic-reg.ttf",
		bolditalics: "examples/fonts/NotoSansEnglishArabic-Bold.ttf",
	},
	Roboto: {
		normal: "examples/fonts/Roboto-Regular.ttf",
		bold: "examples/fonts/Roboto-Medium.ttf",
		italics: "examples/fonts/Roboto-Italic.ttf",
		bolditalics: "examples/fonts/Roboto-MediumItalic.ttf",
	},
};

var PdfPrinter = require("../src/printer");
var printer = new PdfPrinter(fonts);
var fs = require("fs");

const shortEnglish = "The man and his dog";
const mediumEnglish = "The man and his dog and his cat";
const longEnglish =
	"The man and his dog and his cat and his snake went for a really long walk to ensure that they started a new line";
const longEnglishWithPunctuation =
	"The man, [his] dog: his cat! and his (snake) went {} for a really <long> walk to /ensure? that ...they started a new line";
const longEnglishWithNewlines =
	"The man and his dog and his cat\nand his snake went for a really long walk\nto test out newlines";
// All arabic sentences generated by using google translate on the corresponding english sentences
// A space is then manually added to the RHS of the string - required for current way that BIDI is
// implemented to avoid word order problems

const arabic = "NotoSansArabic";
const fudge = " ";
const shortArabic = "الرجل وكلبه";
const mediumArabic = "الرجل وكلبه وقطته";
const longArabic =
	"ذهب الرجل وكلبه وقطته وثعبانه في نزهة طويلة حقًا للتأكد من أنهم بدأوا خطًا جديدًا";
const longArabicWithPunctuation =
	"الرجل كلبه: قطه! وذهب (الأفعى) {} في نزهة <طويلة> حقًا من أجل / ضمان؟ أن ... بدأوا سطرًا جديدًا";
const longArabicWithNewlines =
	"الرجل وكلبه وقطته\nوذهب ثعبانه في نزهة طويلة حقًا\nلاختبار الخطوط الجديدة";

let testCounter = 0;
const generateTestHeader = (string) => {
	return { text: string, fontSize: 16 };
};
const generateTestString = (string) => {
	return { text: `Test ${testCounter++}: ${string}` };
};
const generateTest = (string, font = "Roboto") => {
	return { text: string, font, rtl: font === arabic };
};
const newline = () => {
	return { text: "\n" };
};

const ENGLISH_TESTS = [
	generateTestString("Short line"),
	generateTest(shortEnglish),
	newline(),
	generateTestString("Medium line"),
	generateTest(mediumEnglish),
	newline(),
	generateTestString("Long line"),
	generateTest(longEnglish),
	newline(),
	generateTestString("Long line plus punctuation"),
	generateTest(longEnglishWithPunctuation),
	newline(),
	generateTestString("Long line with newline characters"),
	generateTest(longEnglishWithNewlines),
	newline(),
];

const ARABIC_TESTS = [
	generateTestString(
		"Short line (second entry with manually appended space at end)"
	),
	generateTest(shortArabic, arabic),
	newline(),
	generateTest(shortArabic + fudge, arabic),
	newline(),
	generateTestString(
		"Medium line (second entry with manually appended space at end)"
	),
	generateTest(mediumArabic, arabic),
	newline(),
	generateTest(mediumArabic + fudge, arabic),
	newline(),
	generateTestString(
		"Long line (second entry with manually appended space at end)"
	),
	generateTest(longArabic, arabic),
	newline(),
	generateTest(longArabic + fudge, arabic),
	newline(),
	generateTestString(
		"Long line plus punctuation (second entry with manually appended space at end)"
	),
	generateTest(longArabicWithPunctuation, arabic),
	newline(),
	generateTest(longArabicWithPunctuation + fudge, arabic),
	newline(),
	generateTestString(
		"Long line with newline characters (second entry with manually appended space at end of each line)"
	),
	generateTest(longArabicWithNewlines, arabic),
	newline(),
	generateTest(longArabicWithNewlines.replace("\n", " \n") + fudge, arabic),
	newline(),
];

var docDefinition = {
	content: [
		generateTestHeader("ENGLISH TESTS"),
		...ENGLISH_TESTS,
		generateTestHeader("ARABIC TESTS (using rtl as used in articles)"),
		...ARABIC_TESTS,
	],
};

var pdfDoc = printer.createPdfKitDocument(docDefinition);
pdfDoc.pipe(fs.createWriteStream("examples/pdfs/regression-tests.pdf"));
pdfDoc.end();
